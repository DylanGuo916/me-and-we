// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String          @id @default(uuid())
  name        String
  email       String          @unique
  avatar      String?
  createdAt   DateTime        @default(now())
  posts       Post[]
  communities UserCommunity[]
  Community   Community[]
}

model Post {
  id          String     @id @default(uuid())
  title       String
  content     String
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  community   Community? @relation(fields: [communityId], references: [id])
  communityId String?
  createdAt   DateTime   @default(now())
}

model Community {
  id          String          @id @default(uuid())
  name        String
  description String?
  owner       User            @relation(fields: [ownerId], references: [id])
  ownerId     String
  createdAt   DateTime        @default(now())
  members     UserCommunity[]
  posts       Post[]
}

model UserCommunity {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  community   Community @relation(fields: [communityId], references: [id])
  communityId String
  joinedAt    DateTime  @default(now())

  @@unique([userId, communityId])
}
